{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "VnetFW",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "virtualNetworkNewOrExisting": {
       "type": "string",
       "defaultValue": "new",
       "allowedValues": [
       		"new",
       		"existing"
            ],
       "metadata": {
       	"description": "Select whether to use a new or existing Virtual Network, specified by virtualNetworkName"
       }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.55.0.0/16",
      "metadata": {
        "description": "CIDR for Virtual Network"
      }
    },
    "routeTableName": {
      "type": "string",
      "defaultValue": "Rttbl",
      "metadata": {
        "description": "CIDR for Virtual Network"
      }
    },
    "mgmtSubnetName": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "Subnet for Management Network"
      }
    },
    "mgmtSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.55.0.0/24",
      "metadata": {
        "description": "CIDR for Management Network"
      }
    },
    "untrustSubnetName": {
      "type": "string",
      "defaultValue": "Untrust",
      "metadata": {
        "description": "Subnet for Untrusted Network"
      }
    },
    "untrustSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.55.1.0/24",
      "metadata": {
        "description": "CIDR for Untrusted Network"
      }
    },
    "trustSubnetName": {
      "type": "string",
      "defaultValue": "Trust",
      "metadata": {
        "description": "Subnet for Trusted Network"
      }
    },
    "trustSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.55.42.0/24",
      "metadata": {
        "description": "CIDR for Trusted Network"
      }
    },
    "appGatewaySubnetName": {
      "type": "string",
      "defaultValue": "AppGWSubnet",
      "metadata": {
        "description": "Subnet for App Gateway"
      }
    },
    "appGatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.55.3.0/24",
      "metadata": {
        "description": "CIDR for App Gateway"
      }
    },
    "appGatewayName": {
      "type": "string",
      "defaultValue": "AppGw",
      "metadata": {
        "description": "App Gateway name - used to identify resource in Azure portal"
      }
    },
    "appGatewayDnsName": {
      "type": "string",
      "metadata": {
        "description": "App Gateway Public IP DNS Name. Must be globally unique."
      }
    },
    "firewallVmName": {
       "type": "string",
       "metadata": {
          "description": "Name prefix of VM-Series VM in the Azure portal"
       },
       "defaultValue": "FW"
    },
    "firewallAvSet": {
    	"type": "string",
      	"metadata": {
    			"description": "Firewall Availability Set Name"
    		},
    	"defaultValue" : "AvSet"
    },
    "imageSku": {
       "type": "string",
       "defaultValue": "bundle1",
       "allowedValues": [
          "byol",
          "bundle1",
          "bundle2"
       ],
       "metadata": {
           "description": "byol = Bring Your Own License; bundle1 = Bundle 1 PAYG (Hourly); bundle2 = Bundle 2 PAYG (Hourly)"
       }
    },
    "imageVersion": {
       "type": "string",
       "allowedValues": [
          "8.1.0",
          "8.0.0",
          "7.1.1",
          "latest"
       ],
       "metadata": {
          "description": "PAN OS Version"
       },
       "defaultValue": "latest"
    },
    "firewallVmSize": {
       "type": "string",
       "allowedValues": [
                "Standard_D3",
                "Standard_D4",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_DS5_v2",
                "Standard_A4"
       ],
       "metadata": {
          "description": "Azure VM size for VM-Series"
       },
       "defaultValue": "Standard_D3_v2"
    },
	"firewallCount": {
		"type": "int",
		"defaultValue": 2,
		"allowedValues": [
			1,
			2,
			3,
			4,
			5,
			6
		],
		"metadata": {
			"description": "Select the number of VM-Series firewalls to deploy.  Minimum is 1, maximum is 6."
		}
	},
    "mgmtPublicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "DNS Name prefix of public IP resource for Management interface of VM-Series firewall.  Name must be globally unique."
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Premium_LRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Type of the storage account used for Firewall Managed Disk"
      },
      "defaultValue": "Standard_LRS"
    },
    "nsgName": {
        "type": "string",
        "metadata": {
        	"description": "Network Security Group Base Name"
      },
      "defaultValue": "nsg"
    },
    "networkSecurityGroupInboundSrcIP": {
       "type": "string",
       "metadata": {
           "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT), to restrict access to the deployment."
       },
       "defaultValue": "0.0.0.0/0"
    },
    "username": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "description": "Username of the administrator account of VM instances"
      }
    },
    "password": {
      "type": "securestring",
      "defaultValue": "azure@dmin123",
      "metadata": {
        "description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
      }
    },
    "customStorageAccount": {
            "type": "string",
            "defaultValue": "jjmeast2bootstrap",
            "metadata":{
              "description": "Name of storage account for bootstrap"
            }
      },
    "customAccessKey": {
            "type": "securestring",
            "defaultValue": "kvO3UatZlLDLLN1atOp1kDl43kOBd5iG6UmGZ1WhYHojtvLUBGcutjiZUVoCoQHb5UL8zEBPBiHjVD8RjLmdtg==",
            "metadata":{
              "description": "Storage account access key to read blob data privately"
            }
      },
    "customFileShare": {
            "type": "string",
            "defaultValue": "jjme2fs",
            "metadata":{
              "description": "File Share containing bootstrap file"
            }
      },
	"customShareDirectory": {
		"defaultValue": "None",
		"type": "String",
		"metadata": {
                "description": "The subdirectory hosting the bootstrap files. Only required if hosting multiple bootstrap directories on the same share"
            }
	}
},
  "variables": {
    "location" : "[resourceGroup().location]",
	"imagePublisher": "paloaltonetworks",
    "imageOffer" : "vmseries1",
    "rgname" : "[resourceGroup().name]",
    "LoadBalancerType" : "layer-7",
    "apiVersion": "2018-06-01",
    "customDataField": "[concat('storage-account=', parameters('customStorageAccount'), ',access-key=', parameters('customAccessKey'), ',file-share=', parameters('customFileShare'), ',share-directory=', parameters('customShareDirectory'))]",
	"pipAppGw": "[concat(parameters('appGatewayDnsName'),'pipAppGw')]",
	"appgwsubnetref": "[concat(variables('vnetID'),'/subnets/',parameters('appGatewaySubnetName'))]",
	"vnetname": "[parameters('virtualNetworkName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetname'))]",
    "appGwSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('appGatewaySubnetName'))]",
    "subnetRefMgmt": "[concat(variables('vnetID'),'/subnets/',parameters('mgmtSubnetName'))]",
    "subnetRefUntrust": "[concat(variables('vnetID'),'/subnets/',parameters('untrustSubnetName'))]",
    "subnetRefTrust": "[concat(variables('vnetID'),'/subnets/',parameters('trustSubnetName'))]",
    "subnetLBRef": "[concat(variables('vnetID'),'/subnets/',parameters('appGatewaySubnetName'))]",
    "rttablename": "[concat('rt',parameters('virtualNetworkName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',parameters('appGatewayName'))]",
    "subnets": [
      {
        "name": "[parameters('mgmtSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('mgmtSubnetPrefix')]",
          "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
          }
        }
      },
      {
        "name": "[parameters('untrustSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('untrustSubnetPrefix')]",
          "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('nsgName'), 'Untnsg'))]"
          }
        }
      },
      {
        "name": "[parameters('trustSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('trustSubnetPrefix')]"
        }
      },
      {
        "name": "[parameters('appGatewaySubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('appGatewaySubnetPrefix')]"
        }
      }
    ]
},
	"resources": [
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[parameters('nsgName')]",
		"location": "[variables('location')]",
		"properties": {
			"securityRules": [{
				"name": "Allow-Outside-From-IP",
				"properties": {
					"description": "Rule",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "[parameters('networkSecurityGroupInboundSrcIP')]",
					"destinationAddressPrefix": "*",
					"access": "Allow",
					"priority": 100,
					"direction": "Inbound"
				}
			}, {
				"name": "Allow-Intra",
				"properties": {
					"description": "Allow intra network traffic",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
					"destinationAddressPrefix": "*",
					"access": "Allow",
					"priority": 101,
					"direction": "Inbound"
				}
			}, {
				"name": "Default-Deny",
				"properties": {
					"description": "Default-Deny if we don't match Allow rule",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "*",
					"destinationAddressPrefix": "*",
					"access": "Deny",
					"priority": 200,
					"direction": "Inbound"
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[concat(parameters('nsgName'), 'Untnsg')]",
		"location": "[variables('location')]",
		"properties": {
			"securityRules": [{
				"name": "Allow-Outside-From-All",
				"properties": {
					"description": "Rule",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "*",
					"destinationAddressPrefix": "*",
					"access": "Allow",
					"priority": 100,
					"direction": "Inbound"
				}
			}, {
				"name": "Default-Deny",
				"properties": {
					"description": "Default-Deny if we don't match Allow rule",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "*",
					"destinationAddressPrefix": "*",
					"access": "Deny",
					"priority": 200,
					"direction": "Inbound"
				}
			}]
		}
	},
	{
		"type": "Microsoft.Network/routeTables",
		"name": "[variables('rttablename')]",
		"apiVersion": "2017-06-01",
		"location": "[resourceGroup().location]",
		"properties": {
			"routes": [
				{
					"name": "[concat('rte', variables('rttablename'))]",
					"properties": {
						"addressPrefix": "0.0.0.0/0",
						"nextHopType": "Internet"
					}
				}
			]
		}
	  },
	{
	  "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
	  "name": "[parameters('virtualNetworkName')]",
	  "type": "Microsoft.Network/virtualNetworks",
	  "apiVersion": "[variables('apiVersion')]",
	  "location": "[variables('location')]",
	  "dependsOn": [
		"[parameters('nsgName')]",
		"[variables('rttablename')]"
	  ],
	  "properties": {
		"addressSpace": {
		  "addressPrefixes": [
			"[parameters('virtualNetworkAddressPrefix')]"
		  ]
		},
		"subnets": "[variables('subnets')]"
	  }
	},
	{
	  "apiVersion": "[variables('apiVersion')]",
	  "type": "Microsoft.Network/publicIPAddresses",
	  "name": "[variables('pipAppGw')]",
	  "location": "[resourceGroup().location]",
	  "properties": {
		"publicIPAllocationMethod": "Dynamic"
	  }
	},
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('virtualNetworkName'),'MgmtPip',copyindex())]",
      "location": "[variables('location')]",
	  "copy": {
			"name": "trustStaticNicLoop",
			"count": "[parameters('firewallCount')]"
		},
      "sku":
            {
                "name": "Standard"
            },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('virtualNetworkName'),'MgmtPip',copyindex()))]"
        }
      }
    },
	{
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('virtualNetworkName'),'MgmtNic',copyindex())]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[resourceGroup().location]",
	    "dependsOn": [
		  "[parameters('virtualNetworkName')]"
	    ],
		"copy": {
			"name": "NicLoopMgmt",
			"count": "[parameters('firewallCount')]"
		},
		"properties": {
			"enableIPForwarding": false,
			"ipConfigurations": [
				{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('virtualNetworkName'),'MgmtPip',copyindex()))]"
             			},
						"subnet": {
							"id": "[variables('subnetRefMgmt')]"
						}
					}
				}
			]
		}
	},
	{
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('virtualNetworkName'),'UntrustNic',copyindex())]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[resourceGroup().location]",
	    "dependsOn": [
		  "[parameters('virtualNetworkName')]",
		  "[parameters('appGatewayName')]"
	    ],
		"copy": {
			"name": "NicLoopUntrust",
			"count": "[parameters('firewallCount')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [
				{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"applicationGatewayBackendAddressPools": [
                    	{
                      	  "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/',parameters('appGatewayName'),'BePool')]"

                    	}
                  	],
						"subnet": {
							"id": "[variables('subnetRefUntrust')]"
						}
					}
				}
			]
		}
	},
	{
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(parameters('virtualNetworkName'),'TrustNic',copyindex())]",
		"apiVersion": "[variables('apiVersion')]",
		"location": "[resourceGroup().location]",
	    "dependsOn": [
		  "[parameters('virtualNetworkName')]"
	    ],
		"copy": {
			"name": "NicLoopTrust",
			"count": "[parameters('firewallCount')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [
				{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('subnetRefTrust')]"
						}
					}
				}
			]
		}
	},

	{
	  "name": "[parameters('appGatewayName')]",
	  "apiVersion": "[variables('apiVersion')]",
	  "location": "[variables('location')]",
	  "type": "Microsoft.Network/applicationGateways",
	  "dependsOn": [
	  	"[parameters('virtualNetworkName')]",
		"[variables('pipAppGw')]"
	  ],
	  "properties": {
		"sku": {
		  "name": "Standard_Medium",
		  "tier": "Standard",
		  "capacity": "2"
		},
		"gatewayIPConfigurations": [
		  {
			"name": "[concat(parameters('appGatewayName'),'ipconfig')]",
			"properties": {
			  "subnet": {
				"id": "[variables('appGwSubnetRef')]"
			  }
			}
		  }
		],
		"frontendIPConfigurations": [
		{
			"name": "[concat(parameters('appGatewayName'),'FeIP')]",
			"properties": {
			  "PublicIPAddress": {
				"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipAppGw'))]"
			  }
			}
		  }
		],
		"frontendPorts": [
		  {
			"name": "[concat(parameters('appGatewayName'),'FePort')]",
			"properties": {
			  "Port": 80
			}
		  }
		],
		"backendAddressPools": [
		  {
			"name": "[concat(parameters('appGatewayName'),'BePool')]",
			"properties": {
			}
		  }
		],
		"backendHttpSettingsCollection": [
		  {
			"name": "[concat(parameters('appGatewayName'),'BeHttpSettings')]",
			"properties": {
			  "Port": 80,
			  "Protocol": "Http",
			  "CookieBasedAffinity": "Disabled"
			}
		  }
		],
		"httpListeners": [
		  {
			"name": "[concat(parameters('appGatewayName'),'httpListener')]",
			"properties": {
			  "FrontendIPConfiguration": {
				"Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/', parameters('appGatewayName'), 'FeIP')]"
			  },
			  "FrontendPort": {
				"Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/', parameters('appGatewayName'), 'FePort')]"
			  },
			  "Protocol": "Http",
			  "SslCertificate": null
			}
		  }
		],
		"requestRoutingRules": [
		  {
			"name": "[concat(parameters('appGatewayName'),'Rule1')]",
			"properties": {
			  "RuleType": "Basic",
			  "httpListener": {
				"id": "[concat(variables('applicationGatewayID'), '/httpListeners/',parameters('appGatewayName'),'httpListener')]"
			  },
			  "backendAddressPool": {
				"id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/',parameters('appGatewayName'),'BePool')]"
			  },
			  "backendHttpSettings": {
				"id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/',parameters('appGatewayName'),'BeHttpSettings')]"
			  }
			}
		  }
		]
		}
	},
		{
		  "type": "Microsoft.Compute/availabilitySets",
		  "name": "[parameters('firewallAvSet')]",
		  "apiVersion": "[variables('apiVersion')]",
		  "location": "[resourceGroup().location]",
		  "sku": {
			"name": "Aligned"
		  },
		  "properties": {
			"platformFaultDomainCount": "3",
			"platformUpdateDomainCount": "20"
		  }
		},
		{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('firewallVmName'),copyindex())]",
        "location": "[resourceGroup().location]",
        "copy": {
			"name": "fwLoop",
			"count": "[parameters('firewallCount')]"
		},
        "dependsOn": [
         "[parameters('firewallAvSet')]",
      	 "[concat(parameters('virtualNetworkName'),'MgmtNic',copyindex())]",
		 "[concat(parameters('virtualNetworkName'),'UntrustNic',copyindex())]",
		 "[concat(parameters('virtualNetworkName'),'TrustNic',copyindex())]"
      ],
        "plan": {
           "name": "[parameters('imageSku')]",
           "product": "[variables('imageOffer')]",
           "publisher": "[variables('imagePublisher')]"
        },
        "properties": {
          	"availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('firewallAvSet'))]"
                },
            "hardwareProfile": {
                "vmSize": "[parameters('firewallVmSize')]"
            },
            "osProfile": {
                "computerName": "[parameters('firewallVmName')]",
                "adminUsername": "[parameters('username')]",
                "adminPassword": "[parameters('password')]",
                "customData": "[base64(variables('customDataField'))]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[parameters('imageSku')]",
                    "version": "[parameters('imageVersion')]"
                },
                "osDisk": {
                    "name": "[concat(parameters('firewallVmName'),'disk',copyindex())]",
                    "managedDisk": {
                            "storageAccountType": "[parameters('storageAccountType')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "diskSizeGB": 60
                }
            },
            "networkProfile": {
                "networkInterfaces": [{
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualNetworkName'),'MgmtNic',copyindex()))]",
                    "properties": {
                        "primary": true
                    }
                }, {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualNetworkName'),'UntrustNic',copyindex()))]",
                    "properties": {
                        "primary": false
                    }
                }, {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualNetworkName'),'TrustNic',copyindex()))]",
                    "properties": {
                        "primary": false
                    }
                }]
            }
        }
    }

	],
  "outputs": {
    "appGwBePool": {
    	"value": "[concat(variables('applicationGatewayID'), '/backendAddressPools/',parameters('appGatewayName'),'BePool')]",
    	"type": "string"
    	},
    "CustomDataField": {
    	"value": "[variables('customDataField')]",
    	"type": "string"
    	},
    "vnetName": {
      "value": "[parameters('virtualNetworkName')]",
      "type": "string"
    }
  }


}